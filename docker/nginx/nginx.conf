map $host $domain_name {
  default "byars.xyz";
}


server {
  listen 80;
  listen [::]:80;
  server_name \$domain_name www.\$domain_name;

  location = / {
    add_header Content-Type text/html;
    return 200 'baz';
  }
}

# server {
#   listen 80;
#   listen [::]:80;
#   server_name $domain_name www.$domain_name;
#
#   # Redirect all HTTP traffic to HTTPS
#   return 301 https://$host$request_uri;
# }
#
# server {
#   listen 443 ssl;
#   listen [::]:443 ssl;
#   server_name $domain_name www.$domain_name;
#
#   # SSL configuration
#   ssl_certificate /etc/nginx/certs/nginx.crt;
#   ssl_certificate_key /etc/nginx/certs/nginx.key;
#
#   # SSL settings
#   ssl_protocols TLSv1.2 TLSv1.3;
#   ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
#   ssl_prefer_server_ciphers off;
#
#   # Root location for serving static files
#   root /usr/share/nginx/html;
#
#   # Proxy to miniflux
#   location / {
#     proxy_pass http://miniflux:8080;
#     proxy_set_header Host $host;
#     proxy_set_header X-Real-IP $remote_addr;
#     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#     proxy_set_header X-Forwarded-Proto $scheme;
#   }
# }
